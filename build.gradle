// Top-level build file where you can add configuration options common to all
// sub-projects/modules.
buildscript {
    ext {
        kotlinVersion = "1.8.21"
        coroutinesVersion = "1.7.0"
//        composeCompilerVersion = "1.4.7"
//        composeBomVersion = "2023.05.01"
//        composeNavigationVersion = "2.5.3"
//        composeViewModelVersion = "2.6.1"
        lifecycleVersion = "2.6.1"
        navVersion = "2.5.3"
        retrofitVersion = "2.9.0"
        okhttpVersion = "4.11.0"
        appCompatVersion = "1.6.1"
        materialVersion = "1.9.0"
        coilVersion = "2.3.0"
    }

    repositories {
        google()
        mavenCentral()
        maven {
            url "https://maven.google.com"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.48.1'
    }
}

plugins {
    id 'com.google.devtools.ksp' version '1.8.21-1.0.11'
    id 'org.jetbrains.kotlin.android' version '1.8.21' apply false// Depends on your kotlin version
    id 'com.google.dagger.hilt.android' version '2.48.1' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.0'

}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.dagger.hilt.android'
repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url = 'https://jitpack.io' }
}

configurations {
    freeImplementation
    conversationsFreeImplementation
    conversationsPlaystorImplementation
    quicksyFreeImplementation
    quicksyImplementation
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.viewpager:viewpager:1.0.0'

    implementation 'com.github.open-keychain.open-keychain:openpgp-api:v5.7.1'
    implementation("com.github.CanHub:Android-Image-Cropper:2.0.0")
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.8.0'

    implementation "androidx.emoji2:emoji2:1.2.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    freeImplementation "androidx.emoji2:emoji2-bundled:1.2.0"

    implementation 'org.bouncycastle:bcmail-jdk15on:1.64'
    //zxing stopped supporting Java 7 so we have to stick with 3.3.3
    //https://github.com/zxing/zxing/issues/1170
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'de.measite.minidns:minidns-hla:0.2.4'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'org.whispersystems:signal-protocol-java:2.6.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation "com.wefika:flowlayout:0.4.1"
    //noinspection GradleDependency
    implementation('com.github.natario1:Transcoder:v0.9.1') {
        exclude group: 'com.otaliastudios.opengl', module: 'egloo'
    }
    implementation 'com.github.natario1:Egloo:v0.4.0'

    implementation 'org.jxmpp:jxmpp-jid:1.0.3'
    implementation 'org.jxmpp:jxmpp-stringprep-libidn:1.0.3'
    implementation 'org.osmdroid:osmdroid-android:6.1.11'
    implementation 'org.hsluv:hsluv:0.2'
    implementation 'org.conscrypt:conscrypt-android:2.5.2'
    implementation 'me.drakeet.support:toastcompat:1.1.0'
    implementation "com.leinardi.android:speed-dial:3.2.0"

    //Retrofit & okHttp
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.10.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"
    implementation 'com.google.guava:guava:31.1-android'
    quicksyImplementation 'io.michaelrocks:libphonenumber-android:8.12.49'
//     implementation 'im.conversations.webrtc:webrtc-android:104.0.0'

    /// New dependencies

//    Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"


//    LIFE-CYCLE
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // country picker
    implementation 'com.hbb20:ccp:2.5.3'
    implementation 'com.intuit.sdp:sdp-android:1.1.0'

    //multidex
    implementation 'androidx.multidex:multidex:2.0.1'
    // socket
    implementation('io.socket:socket.io-client:2.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    // media-soup
//   implementation 'io.github.haiyangwu:mediasoup-client:3.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    implementation 'com.github.bumptech.glide:glide:4.16.0'

    // charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.intuit.sdp:sdp-android:1.1.0'

    implementation 'org.protoojs.droid:protoo-client:4.0.3'
    implementation "androidx.preference:preference-ktx:1.2.1"

    // Jackson
    implementation "com.fasterxml.jackson.core:jackson-core:2.8.3"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.8.3"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.8.3"

    // Volley
    implementation "com.android.volley:volley:1.2.1"

//    HILT
    implementation 'com.google.dagger:hilt-android:2.48.1'
    kapt 'com.google.dagger:hilt-compiler:2.48.1'

//    META_MASK
    implementation 'io.metamask.androidsdk:metamask-android-sdk:0.2.1'


}

ext {
    preDexEnabled = System.getProperty("pre-dex", "true")
    abiCodes = ['armeabi-v7a': 1, 'x86': 2, 'x86_64': 3, 'arm64-v8a': 4]
}

android {
    namespace 'eu.siacs.conversations'
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 30
        versionName "1.3.0"
        archivesBaseName += "-$versionName"
        applicationId "com.wgroup.woooo_app"
        resValue "string", "applicationId", applicationId
        def appName = "Woooo"
        resValue "string", "app_name", appName
        buildConfigField "String", "APP_NAME", "\"$appName\""
        multiDexEnabled true

        renderscriptTargetApi 21
        renderscriptSupportModeEnabled true
    }

    splits {
        abi {
            universalApk true
            enable true
        }
    }

    configurations {
        implementation.exclude group: 'org.jetbrains', module: 'annotations'
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions.jvmTarget = "11"
        }
    }
    kapt { correctErrorTypes = true }


    buildFeatures {
//        compose true
        viewBinding true
    }
//    composeOptions {
//        kotlinCompilerExtensionVersion = "1.4.7"
//    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }

    kapt {
        correctErrorTypes true
    }
    flavorDimensions("mode", "distribution")

    productFlavors {

        quicksy {
            dimension "mode"
            applicationId = "im.quicksy.client"
            resValue "string", "applicationId", applicationId

            def appName = "Quicksy"
            resValue "string", "app_name", appName
            buildConfigField "String", "APP_NAME", "\"$appName\""
        }

        conversations {
            dimension "mode"
        }

//        playstore {
//            dimension "distribution"
//            versionNameSuffix "+playstore"
//        }
        free {
            dimension "distribution"
            versionNameSuffix "+free"
        }
    }

    sourceSets {
        quicksyFree {
            java {
                srcDir 'src/quicksyFree/java'
            }
        }

        conversationsFree {
            java {
                srcDir 'src/conversationsFree/java'
            }
        }


    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            shrinkResources true
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    if (new File("signing.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("signing.properties")))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.password']
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    }


    subprojects {

        afterEvaluate {
            if (getPlugins().hasPlugin('android') ||
                    getPlugins().hasPlugin('android-library')) {

                configure(android.lintOptions) {
                    disable 'AndroidGradlePluginVersion', 'MissingTranslation'
                }
            }

        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/BCKEY.DSA', 'META-INF/BCKEY.SF']
        }
    }
    lint {
        disable 'MissingTranslation', 'InvalidPackage', 'AppCompatResource', 'ExtraTranslation'
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter(com.android.build.OutputFile.ABI))
//            if (baseAbiVersionCode != null) {
//                output.versionCodeOverride = (100 * project.android.defaultConfig.versionCode) + baseAbiVersionCode
//            } else {
//                output.versionCodeOverride = 100 * project.android.defaultConfig.versionCode
//            }
//        }
//
//    }
}